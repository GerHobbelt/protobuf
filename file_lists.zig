pub const libprotobuf_srcs = .{
    "src/google/protobuf/any.pb.cc",
    "src/google/protobuf/api.pb.cc",
    "src/google/protobuf/duration.pb.cc",
    "src/google/protobuf/empty.pb.cc",
    "src/google/protobuf/field_mask.pb.cc",
    "src/google/protobuf/source_context.pb.cc",
    "src/google/protobuf/struct.pb.cc",
    "src/google/protobuf/timestamp.pb.cc",
    "src/google/protobuf/type.pb.cc",
    "src/google/protobuf/wrappers.pb.cc",
    "src/google/protobuf/any.cc",
    "src/google/protobuf/any_lite.cc",
    "src/google/protobuf/arena.cc",
    "src/google/protobuf/arena_align.cc",
    "src/google/protobuf/arenastring.cc",
    "src/google/protobuf/arenaz_sampler.cc",
    "src/google/protobuf/compiler/importer.cc",
    "src/google/protobuf/compiler/parser.cc",
    "src/google/protobuf/cpp_features.pb.cc",
    "src/google/protobuf/feature_resolver.cc",
    "src/google/protobuf/descriptor.cc",
    "src/google/protobuf/descriptor.pb.cc",
    "src/google/protobuf/descriptor_database.cc",
    "src/google/protobuf/dynamic_message.cc",
    "src/google/protobuf/extension_set.cc",
    "src/google/protobuf/extension_set_heavy.cc",
    "src/google/protobuf/generated_enum_util.cc",
    "src/google/protobuf/generated_message_bases.cc",
    "src/google/protobuf/generated_message_reflection.cc",
    "src/google/protobuf/generated_message_tctable_full.cc",
    "src/google/protobuf/generated_message_tctable_gen.cc",
    "src/google/protobuf/generated_message_tctable_lite.cc",
    "src/google/protobuf/generated_message_util.cc",
    "src/google/protobuf/implicit_weak_message.cc",
    "src/google/protobuf/inlined_string_field.cc",
    "src/google/protobuf/internal_message_util.cc",
    "src/google/protobuf/io/coded_stream.cc",
    "src/google/protobuf/io/gzip_stream.cc",
    "src/google/protobuf/io/io_win32.cc",
    "src/google/protobuf/io/printer.cc",
    "src/google/protobuf/io/strtod.cc",
    "src/google/protobuf/io/tokenizer.cc",
    "src/google/protobuf/io/zero_copy_sink.cc",
    "src/google/protobuf/io/zero_copy_stream.cc",
    "src/google/protobuf/io/zero_copy_stream_impl.cc",
    "src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
    "src/google/protobuf/json/internal/lexer.cc",
    "src/google/protobuf/json/internal/message_path.cc",
    "src/google/protobuf/json/internal/parser.cc",
    "src/google/protobuf/json/internal/unparser.cc",
    "src/google/protobuf/json/internal/untyped_message.cc",
    "src/google/protobuf/json/internal/writer.cc",
    "src/google/protobuf/json/internal/zero_copy_buffered_stream.cc",
    "src/google/protobuf/json/json.cc",
    "src/google/protobuf/map.cc",
    "src/google/protobuf/map_field.cc",
    "src/google/protobuf/message.cc",
    "src/google/protobuf/message_lite.cc",
    "src/google/protobuf/parse_context.cc",
    "src/google/protobuf/port.cc",
    "src/google/protobuf/reflection_mode.cc",
    "src/google/protobuf/reflection_ops.cc",
    "src/google/protobuf/repeated_field.cc",
    "src/google/protobuf/repeated_ptr_field.cc",
    "src/google/protobuf/raw_ptr.cc",
    "src/google/protobuf/service.cc",
    "src/google/protobuf/stubs/common.cc",
    "src/google/protobuf/text_format.cc",
    "src/google/protobuf/unknown_field_set.cc",
    "src/google/protobuf/util/delimited_message_util.cc",
    "src/google/protobuf/util/field_comparator.cc",
    "src/google/protobuf/util/field_mask_util.cc",
    "src/google/protobuf/util/message_differencer.cc",
    "src/google/protobuf/util/time_util.cc",
    "src/google/protobuf/util/type_resolver_util.cc",
    "src/google/protobuf/wire_format.cc",
    "src/google/protobuf/wire_format_lite.cc",
};

pub const libprotoc_srcs = .{
    "src/google/protobuf/compiler/allowlists/open_enum.cc",
    "src/google/protobuf/compiler/allowlists/unused_imports.cc",
    "src/google/protobuf/compiler/allowlists/weak_imports.cc",
    "src/google/protobuf/compiler/allowlists/editions.cc",
    "src/google/protobuf/compiler/code_generator.cc",
    "src/google/protobuf/compiler/command_line_interface.cc",
    "src/google/protobuf/compiler/cpp/enum.cc",
    "src/google/protobuf/compiler/cpp/extension.cc",
    "src/google/protobuf/compiler/cpp/field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/cord_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/enum_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/map_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/message_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/primitive_field.cc",
    "src/google/protobuf/compiler/cpp/field_generators/string_field.cc",
    "src/google/protobuf/compiler/cpp/file.cc",
    "src/google/protobuf/compiler/cpp/generator.cc",
    "src/google/protobuf/compiler/cpp/helpers.cc",
    "src/google/protobuf/compiler/cpp/message.cc",
    "src/google/protobuf/compiler/cpp/padding_optimizer.cc",
    "src/google/protobuf/compiler/cpp/parse_function_generator.cc",
    "src/google/protobuf/compiler/cpp/service.cc",
    "src/google/protobuf/compiler/cpp/tracker.cc",
    "src/google/protobuf/compiler/csharp/csharp_doc_comment.cc",
    "src/google/protobuf/compiler/csharp/csharp_enum.cc",
    "src/google/protobuf/compiler/csharp/csharp_enum_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_field_base.cc",
    "src/google/protobuf/compiler/csharp/csharp_generator.cc",
    "src/google/protobuf/compiler/csharp/csharp_helpers.cc",
    "src/google/protobuf/compiler/csharp/csharp_map_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_message.cc",
    "src/google/protobuf/compiler/csharp/csharp_message_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_primitive_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_reflection_class.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_enum_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_message_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_repeated_primitive_field.cc",
    "src/google/protobuf/compiler/csharp/csharp_source_generator_base.cc",
    "src/google/protobuf/compiler/csharp/csharp_wrapper_field.cc",
    "src/google/protobuf/compiler/csharp/names.cc",
    "src/google/protobuf/compiler/java/context.cc",
    "src/google/protobuf/compiler/java/doc_comment.cc",
    "src/google/protobuf/compiler/java/enum.cc",
    "src/google/protobuf/compiler/java/enum_field.cc",
    "src/google/protobuf/compiler/java/enum_field_lite.cc",
    "src/google/protobuf/compiler/java/enum_lite.cc",
    "src/google/protobuf/compiler/java/extension.cc",
    "src/google/protobuf/compiler/java/extension_lite.cc",
    "src/google/protobuf/compiler/java/field.cc",
    "src/google/protobuf/compiler/java/file.cc",
    "src/google/protobuf/compiler/java/generator.cc",
    "src/google/protobuf/compiler/java/generator_factory.cc",
    "src/google/protobuf/compiler/java/helpers.cc",
    "src/google/protobuf/compiler/java/kotlin_generator.cc",
    "src/google/protobuf/compiler/java/map_field.cc",
    "src/google/protobuf/compiler/java/map_field_lite.cc",
    "src/google/protobuf/compiler/java/message.cc",
    "src/google/protobuf/compiler/java/message_builder.cc",
    "src/google/protobuf/compiler/java/message_builder_lite.cc",
    "src/google/protobuf/compiler/java/message_field.cc",
    "src/google/protobuf/compiler/java/message_field_lite.cc",
    "src/google/protobuf/compiler/java/message_lite.cc",
    "src/google/protobuf/compiler/java/message_serialization.cc",
    "src/google/protobuf/compiler/java/name_resolver.cc",
    "src/google/protobuf/compiler/java/names.cc",
    "src/google/protobuf/compiler/java/primitive_field.cc",
    "src/google/protobuf/compiler/java/primitive_field_lite.cc",
    "src/google/protobuf/compiler/java/service.cc",
    "src/google/protobuf/compiler/java/shared_code_generator.cc",
    "src/google/protobuf/compiler/java/string_field.cc",
    "src/google/protobuf/compiler/java/string_field_lite.cc",
    "src/google/protobuf/compiler/objectivec/enum.cc",
    "src/google/protobuf/compiler/objectivec/enum_field.cc",
    "src/google/protobuf/compiler/objectivec/extension.cc",
    "src/google/protobuf/compiler/objectivec/field.cc",
    "src/google/protobuf/compiler/objectivec/file.cc",
    "src/google/protobuf/compiler/objectivec/generator.cc",
    "src/google/protobuf/compiler/objectivec/helpers.cc",
    "src/google/protobuf/compiler/objectivec/import_writer.cc",
    "src/google/protobuf/compiler/objectivec/line_consumer.cc",
    "src/google/protobuf/compiler/objectivec/map_field.cc",
    "src/google/protobuf/compiler/objectivec/message.cc",
    "src/google/protobuf/compiler/objectivec/message_field.cc",
    "src/google/protobuf/compiler/objectivec/names.cc",
    "src/google/protobuf/compiler/objectivec/oneof.cc",
    "src/google/protobuf/compiler/objectivec/primitive_field.cc",
    "src/google/protobuf/compiler/objectivec/text_format_decode_data.cc",
    "src/google/protobuf/compiler/php/names.cc",
    "src/google/protobuf/compiler/php/php_generator.cc",
    "src/google/protobuf/compiler/plugin.cc",
    "src/google/protobuf/compiler/plugin.pb.cc",
    "src/google/protobuf/compiler/python/generator.cc",
    "src/google/protobuf/compiler/python/helpers.cc",
    "src/google/protobuf/compiler/python/pyi_generator.cc",
    "src/google/protobuf/compiler/retention.cc",
    "src/google/protobuf/compiler/ruby/ruby_generator.cc",
    "src/google/protobuf/compiler/rust/accessors/accessors.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_bytes.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_scalar.cc",
    "src/google/protobuf/compiler/rust/accessors/unsupported_field.cc",
    "src/google/protobuf/compiler/rust/accessors/singular_message.cc",
    "src/google/protobuf/compiler/rust/context.cc",
    "src/google/protobuf/compiler/rust/generator.cc",
    "src/google/protobuf/compiler/rust/message.cc",
    "src/google/protobuf/compiler/rust/naming.cc",
    "src/google/protobuf/compiler/rust/relative_path.cc",
    "src/google/protobuf/compiler/subprocess.cc",
    "src/google/protobuf/compiler/zip_writer.cc",
};

pub const absl_base_srcs = .{
    "third_party/abseil-cpp/absl/base/internal/cycleclock.cc",
    "third_party/abseil-cpp/absl/base/internal/spinlock.cc",
    "third_party/abseil-cpp/absl/base/internal/sysinfo.cc",
    "third_party/abseil-cpp/absl/base/internal/thread_identity.cc",
    "third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.cc",
    "third_party/abseil-cpp/absl/base/log_severity.cc",
    "third_party/abseil-cpp/absl/base/internal/raw_logging.cc",
    "third_party/abseil-cpp/absl/base/internal/spinlock_wait.cc",
    "third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc",
    "third_party/abseil-cpp/absl/base/internal/strerror.cc",
    "third_party/abseil-cpp/absl/base/internal/throw_delegate.cc",
};

pub const absl_strings_srcs = .{
    "third_party/abseil-cpp/absl/strings/ascii.cc",
    "third_party/abseil-cpp/absl/strings/charconv.cc",
    "third_party/abseil-cpp/absl/strings/escaping.cc",
    "third_party/abseil-cpp/absl/strings/internal/charconv_bigint.cc",
    "third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc",
    "third_party/abseil-cpp/absl/strings/internal/damerau_levenshtein_distance.cc",
    "third_party/abseil-cpp/absl/strings/internal/memutil.cc",
    "third_party/abseil-cpp/absl/strings/internal/stringify_sink.cc",
    "third_party/abseil-cpp/absl/strings/match.cc",
    "third_party/abseil-cpp/absl/strings/numbers.cc",
    "third_party/abseil-cpp/absl/strings/str_cat.cc",
    "third_party/abseil-cpp/absl/strings/str_replace.cc",
    "third_party/abseil-cpp/absl/strings/str_split.cc",
    "third_party/abseil-cpp/absl/strings/string_view.cc",
    "third_party/abseil-cpp/absl/strings/substitute.cc",
    "third_party/abseil-cpp/absl/strings/internal/ostringstream.cc",
    "third_party/abseil-cpp/absl/strings/internal/utf8.cc",
    "third_party/abseil-cpp/absl/strings/cord.cc",
    "third_party/abseil-cpp/absl/strings/cord_analysis.cc",
    "third_party/abseil-cpp/absl/strings/cord_buffer.cc",
    "third_party/abseil-cpp/absl/strings/internal/cord_internal.cc",
    "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.cc",
    "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.cc",
    "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.cc",
    "third_party/abseil-cpp/absl/strings/internal/cord_rep_crc.cc",
    "third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.cc",
    "third_party/abseil-cpp/absl/strings/internal/cord_rep_ring.cc",
    "third_party/abseil-cpp/absl/strings/internal/str_format/arg.cc",
    "third_party/abseil-cpp/absl/strings/internal/str_format/bind.cc",
    "third_party/abseil-cpp/absl/strings/internal/str_format/extension.cc",
    "third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.cc",
    "third_party/abseil-cpp/absl/strings/internal/str_format/output.cc",
    "third_party/abseil-cpp/absl/strings/internal/str_format/parser.cc",
    "third_party/abseil-cpp/absl/strings/internal/escaping.cc",
    "third_party/abseil-cpp/absl/strings/internal/cordz_info.cc",
    "third_party/abseil-cpp/absl/strings/internal/cordz_functions.cc",
    "third_party/abseil-cpp/absl/strings/internal/cordz_handle.cc",
};

pub const absl_log_srcs = .{
    "third_party/abseil-cpp/absl/log/initialize.cc",
    "third_party/abseil-cpp/absl/log/globals.cc",
    "third_party/abseil-cpp/absl/log/internal/globals.cc",
    "third_party/abseil-cpp/absl/log/internal/log_message.cc",
    "third_party/abseil-cpp/absl/log/internal/log_format.cc",
    "third_party/abseil-cpp/absl/log/internal/nullguard.cc",
    "third_party/abseil-cpp/absl/log/internal/check_op.cc",
    "third_party/abseil-cpp/absl/log/internal/log_sink_set.cc",
    "third_party/abseil-cpp/absl/log/internal/proto.cc",
    "third_party/abseil-cpp/absl/log/log_sink.cc",
    "third_party/abseil-cpp/absl/log/internal/conditions.cc",
};

//https://github.com/abseil/abseil-cpp/blob/29bf8085f3bf17b84d30e34b3d7ff8248fda404e/absl/synchronization/BUILD.bazel
pub const absl_synchronization_srcs = .{
    "third_party/abseil-cpp/absl/synchronization/barrier.cc",
    "third_party/abseil-cpp/absl/synchronization/blocking_counter.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/futex_waiter.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/sem_waiter.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/stdcpp_waiter.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/waiter_base.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/win32_waiter.cc",
    "third_party/abseil-cpp/absl/synchronization/notification.cc",
    "third_party/abseil-cpp/absl/synchronization/mutex.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc",
    "third_party/abseil-cpp/absl/synchronization/internal/kernel_timeout.cc",
};

pub const absl_time_srcs = .{
    "third_party/abseil-cpp/absl/time/civil_time.cc",
    "third_party/abseil-cpp/absl/time/clock.cc",
    "third_party/abseil-cpp/absl/time/duration.cc",
    "third_party/abseil-cpp/absl/time/format.cc",
    "third_party/abseil-cpp/absl/time/time.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/civil_time_detail.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_format.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc",
    "third_party/abseil-cpp/absl/time/internal/cctz/src/zone_info_source.cc",
};

pub const absl_hash_srcs = .{
    "third_party/abseil-cpp/absl/hash/internal/hash.cc",
    "third_party/abseil-cpp/absl/hash/internal/city.cc",
    "third_party/abseil-cpp/absl/hash/internal/low_level_hash.cc",
};

pub const absl_container_srcs = .{
    "third_party/abseil-cpp/absl/container/internal/raw_hash_set.cc",
};

pub const absl_status_srcs = .{
    "third_party/abseil-cpp/absl/status/status.cc",
    "third_party/abseil-cpp/absl/status/status_payload_printer.cc",
    "third_party/abseil-cpp/absl/status/statusor.cc",
};

pub const absl_numeric_srcs = .{
    "third_party/abseil-cpp/absl/numeric/int128.cc",
};

pub const absl_crc_srcs = .{
    "third_party/abseil-cpp/absl/crc/internal/cpu_detect.cc",
    "third_party/abseil-cpp/absl/crc/internal/crc.cc",
    "third_party/abseil-cpp/absl/crc/internal/crc_x86_arm_combined.cc",
    "third_party/abseil-cpp/absl/crc/internal/crc_memcpy_fallback.cc",
    "third_party/abseil-cpp/absl/crc/internal/crc_memcpy_x86_64.cc",
    "third_party/abseil-cpp/absl/crc/internal/crc_non_temporal_memcpy.cc",
    "third_party/abseil-cpp/absl/crc/internal/crc_cord_state.cc",
    "third_party/abseil-cpp/absl/crc/crc32c.cc",
};

pub const absl_debugging_srcs = .{
    "third_party/abseil-cpp/absl/debugging/stacktrace.cc",
    "third_party/abseil-cpp/absl/debugging/internal/address_is_readable.cc",
    "third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.cc",
    "third_party/abseil-cpp/absl/debugging/internal/vdso_support.cc",
    "third_party/abseil-cpp/absl/debugging/symbolize.cc",
    "third_party/abseil-cpp/absl/debugging/internal/demangle.cc",
    "third_party/abseil-cpp/absl/debugging/internal/examine_stack.cc",
};

pub const absl_profiling_srcs = .{"third_party/abseil-cpp/absl/profiling/internal/exponential_biased.cc"};

pub const utf8_range_srcs = .{
    "third_party/utf8_range/naive.c",
    "third_party/utf8_range/range2-neon.c",
    "third_party/utf8_range/range2-sse.c",
};
